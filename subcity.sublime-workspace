{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"tem",
				"temp_violation"
			],
			[
				"device",
				"device_service"
			],
			[
				"zo",
				"zone_types"
			],
			[
				"z",
				"zone_types"
			],
			[
				"num_",
				"num_normal_zone"
			],
			[
				"se",
				"sensor_type"
			],
			[
				"res",
				"response"
			],
			[
				"re",
				"response"
			],
			[
				"th",
				"threshold_speed"
			],
			[
				"time",
				"time_threshold_measures"
			],
			[
				"start_",
				"start_mode"
			],
			[
				"start",
				"start_delay"
			],
			[
				"mem",
				"memcpy"
			],
			[
				"devi",
				"device_service"
			],
			[
				"RF_GROUP_ID_",
				"RF_GROUP_ID_ALARM"
			],
			[
				"cmbDe",
				"tCmbDevices"
			],
			[
				"Acti",
				"ActivePage"
			],
			[
				"tabS",
				"tabSettings"
			],
			[
				"page",
				"pageMain"
			],
			[
				"In",
				"Index"
			],
			[
				"Get",
				"GetID"
			],
			[
				"V",
				"Visible"
			],
			[
				"viola",
				"violation_flag"
			]
		]
	},
	"buffers":
	[
		{
			"file": "config/boot.rb",
			"settings":
			{
				"buffer_size": 1176,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/helpers/fetcher.rb",
			"settings":
			{
				"buffer_size": 5173,
				"line_ending": "Windows"
			}
		},
		{
			"file": "tasks/Rakefile",
			"settings":
			{
				"buffer_size": 10823,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Rakefile",
			"settings":
			{
				"buffer_size": 135,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Gemfile",
			"settings":
			{
				"buffer_size": 779,
				"line_ending": "Unix"
			}
		},
		{
			"file": "config/apps.rb",
			"settings":
			{
				"buffer_size": 1703,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "##\n# You can use other adapters like:\n#\n#   ActiveRecord::Base.configurations[:development] = {\n#     :adapter   => 'mysql2',\n#     :encoding  => 'utf8',\n#     :reconnect => true,\n#     :database  => 'your_database',\n#     :pool      => 5,\n#     :username  => 'root',\n#     :password  => '',\n#     :host      => 'localhost',\n#     :socket    => '/tmp/mysql.sock'\n#   }\n#\nActiveRecord::Base.configurations[:development] = {\n  :adapter => 'sqlite3',\n  :database => Padrino.root('db', 'subscity_development.db')\n\n}\n\nActiveRecord::Base.configurations[:production] = {\n  :adapter => 'sqlite3',\n  :database => Padrino.root('db', 'subscity_production.db')\n\n}\n\nActiveRecord::Base.configurations[:test] = {\n  :adapter => 'sqlite3',\n  :database => Padrino.root('db', 'subscity_test.db')\n\n}\n\n# Setup our logger\nActiveRecord::Base.logger = logger\n\n# Raise exception on mass assignment protection for Active Record models.\nActiveRecord::Base.mass_assignment_sanitizer = :strict\n\n# Log the query plan for queries taking more than this (works\n# with SQLite, MySQL, and PostgreSQL).\nActiveRecord::Base.auto_explain_threshold_in_seconds = 0.5\n\n# Include Active Record class name as root for JSON serialized output.\nActiveRecord::Base.include_root_in_json = false\n\n# Store the full class name (including module namespace) in STI type column.\nActiveRecord::Base.store_full_sti_class = true\n\n# Use ISO 8601 format for JSON serialized times and dates.\nActiveSupport.use_standard_json_time_format = true\n\n# Don't escape HTML entities in JSON, leave that for the #json_escape helper\n# if you're including raw JSON in an HTML page.\nActiveSupport.escape_html_entities_in_json = false\n\n# Now we can establish connection with our db.\nActiveRecord::Base.establish_connection(ActiveRecord::Base.configurations[Padrino.env])\n",
			"file": "config/database.rb",
			"file_size": 1795,
			"file_write_time": 130363538843500105,
			"settings":
			{
				"buffer_size": 1795,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 392.0
	},
	"console":
	{
		"height": 160.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/X/padrino_projects/subscity/admin/views/sessions/new.slim",
		"/X/padrino_projects/sample_blog/app/controllers/posts.rb",
		"/X/padrino_projects/sample_blog/models/account.rb",
		"/X/padrino_projects/subscity/app/app.rb",
		"/X/padrino_projects/subscity/app/helpers/cinema_helper.rb",
		"/X/padrino_projects/subscity/app/helpers/fetcher.rb",
		"/X/padrino_projects/subscity/app/controllers/cinema.rb",
		"/X/padrino_projects/subscity/app/views/cinema/showall.slim",
		"/X/padrino_projects/subscity/log.txt",
		"/X/padrino_projects/subscity/app/views/showall.slim",
		"/X/padrino_projects/sample_blog/.components",
		"/X/padrino_projects/sample_blog/app/app.rb",
		"/X/padrino_projects/sample_blog/public/stylesheets/application.css",
		"/X/padrino_projects/sample_blog/app/stylesheets/application.sass",
		"/C/Dropbox/IntelCraft Temp/!code/Tigilante-Full/SRC/state_machine.c",
		"/C/Dropbox/IntelCraft Temp/!code/Tigilante-Full/SRC/main.c",
		"/C/Dropbox/IntelCraft Temp/!code/Tigilante-Full/SRC/driverlib/5xx_6xx/rtc.c",
		"/C/Dropbox/IntelCraft Temp/!code/Tigilante-Full/SRC/date.c",
		"/C/Dropbox/IntelCraft Temp/!code/Tigilante-Full/SRC/handlers.c",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/Main.h",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/device.cpp",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/parameters.h",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/TThread_Erase_EEPROM.cpp",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/TThread_Erase_FLASH.cpp",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/device.h",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/TThread_Flash_Settings.cpp",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/deviceLister.cpp",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/controls.cpp",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/controls.h",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/TThread_Fill_Report.cpp",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/TThread_Read_EEPROM.cpp",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/hidapi/hidapi.h",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/hidapi/hid - копия.c",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/Main.cpp",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/communication.cpp",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/RFDeviceList.cpp",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/parser.cpp",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/RFDeviceList.h",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/misc.cpp",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/misc.h",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/structs.h",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/experiment.cpp",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/TThread_RF_Pings_Acquisition.cpp",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/frmExportType.cpp",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/frmLanguage.cpp",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/deviceLister.h",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/frmTZ.cpp",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/base64.cpp",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/tigilante.sublime-project",
		"/C/Dropbox/IntelCraft Temp/!code_pc/tigilante/experiment.h"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 102.0,
		"where_history":
		[
			"*.c*,*.h",
			"*.cpp,*.h",
			"*.cpp",
			".",
			"*.cpp;*.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"p.ram.temp_violation = ",
			");\n",
			"p.ram.temp_violation =",
			"p.ram.temp_violation",
			"zone_counters",
			"temp_violation",
			"whetherCalendarPassed",
			"scheduled_start_time",
			"FSM_Transition_SCHEDULED_STOPPED",
			"Disable_RTC_Alarm_Interrupt",
			"schedulewakeup",
			"Enable_RTC_Alarm_Interrupt",
			"RTCHOLD_H",
			"RTC_disableInterrupt",
			"RTC_enableInterrupt",
			"();\n",
			"RTC_enableInterrupt",
			"RTC_disableInterrupt",
			"p.eeprom.start_mode",
			"stopped",
			"RTC_clearInterrupt",
			"RTC_enableInterrupt(__MSP430_BASEADDRESS_RTC__, RTCAIE);",
			"\n	",
			"RTC_clearInterrupt(__MSP430_BASEADDRESS_RTC__, RTC_CLOCK_ALARM_INTERRUPT);",
			"RESET_FLAG",
			"__MSP430_BASEADDRESS_RTC__, RTCAIE",
			"flag_Wake_Up_Timer",
			"flag_Wake_Up_RTC",
			"flag_Woke_Up_from_RTC",
			"WriteParameterRetries",
			"ResetZoneCounters",
			"RESET_ZONE_COUNTERS",
			"reset_counters",
			"ChangePasswordClick",
			"frmProcess",
			"HandlerChangeNumberOfZones",
			"FormStruct",
			"setfroms",
			"TDevice",
			"device",
			"setfromstruct",
			"if",
			"wm_de",
			"hidMutex",
			"devAccessMutex",
			"Mutex",
			"mutex",
			"sleep",
			"RefreshDeviceList",
			"wndproc",
			"WMDeviceChange",
			"SetPassword",
			"ResetViolationFlag",
			"ResetZoneCounters",
			"ReadParameterToStruct",
			"IsEmptyEEPROM",
			"getispro",
			"getis",
			"getispro",
			"ReadHeader",
			"read",
			"readh",
			"getheader(",
			"ReadHeader(",
			"ReadHeader",
			"IsNullParameters",
			"BlockDebug",
			"FormatRemainingMemoryForFullLogger",
			"HandlerWakeUpPeriod",
			"parseping",
			"isradio",
			"GetCheckedInRFListState",
			"ChangeCheckedInRFListState",
			"checked_in_RF_list",
			"device_info.device_header",
			"GetLogLength",
			"memory_used",
			"device_info",
			"isRF",
			"isradio",
			"isRadio",
			"FormWorkDays",
			"getcopyofpar",
			"readvio",
			"ReadViolationFlag",
			"ReadLoggerType",
			"getfreememoryin",
			"getfreememoryinminutes",
			"eepromw",
			"eeprom",
			"eepromreadc",
			"readeepromwr",
			"readeepromw",
			"geteepro",
			"getfreememoryper",
			"readde",
			"readfw",
			"geteepro",
			"readhe",
			"readheader(",
			"getheader(",
			"getheader",
			"readheader(",
			"readheader",
			"isemptyram",
			"isempty",
			"isgapbefore",
			"gap",
			"g",
			"isgapbetween",
			"GetWakeUpPeriodFromParameters",
			"GetEEPROMUsedPerbyteFromParameters",
			"readbattery",
			"GetBatteryVoltageFromParameters",
			"IsVoltageLevelBeneathGivenFromParameters",
			";\n",
			"endif",
			"work_days",
			"GetDefaultParameters(",
			"GetDefaultParameters",
			"TIME_THRESHOLD_MEASURES_MAX",
			"resettable",
			"zone_types",
			"threshold_speed",
			"IDS_193",
			");\n",
			"updaterf",
			"lblRFStatus->Caption"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "config/boot.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1176,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "app/helpers/fetcher.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5173,
						"regions":
						{
						},
						"selection":
						[
							[
								4475,
								4475
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 176.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "tasks/Rakefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10823,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1144.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Rakefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 135,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Gemfile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 779,
						"regions":
						{
						},
						"selection":
						[
							[
								459,
								459
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 198.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "config/apps.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1703,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 440.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "config/database.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1795,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 286.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "subcity.sublime-project",
	"replace":
	{
		"height": 56.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"fillz",
				"FillZonesGrid"
			]
		],
		"width": 392.0
	},
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 204.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
